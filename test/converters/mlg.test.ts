import { getBufferResult } from '../data/utils';
import { frames1 } from '../data/frames1';
import { DataFrameStream } from '../../src/inputs/data-frame-stream';
import { MlgWriter } from '../../src/converters/mlg/mlg.writer';

const frames1Result = Buffer.from('TUxWTEcAAAJmOuqwAAABIwAAAUoADAADB0NoYW5uZWwgMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+AAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQ2hhbm5lbCAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG0AAAAAAAAAAAAAP4AAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdDaGFubmVsICIzIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/gAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATG9nIGdlbmVyYXRlZCBieSByYWNpbmctZGF0YS1jb252ZXJ0ZXIAAAAAAEEgAAAAAAAAAAAAAGEAAQPoQfAAAEGgAAAAAAAAEgACD6BCIAAAQaAAAD4RaHNt', 'base64');

test('mlg conversion', async () => {
  const writer = new MlgWriter({
    channels: frames1.channels,
    description: 'Log generated by racing-data-converter',
    date: new Date('2024-05-08T03:00:00.000Z'),
  });

  const input = new DataFrameStream();
  const output = writer.createStream(input);

  input.writeAll(frames1.frames);
  input.end();

  const result = await getBufferResult(output);

  expect(result.toString('hex')).toBe(frames1Result.toString('hex'));
});
